name: Build and Push vLLM Docker

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: registry.cn-beijing.aliyuncs.com
  IMAGE_NAME: yoce/vllm
  CUDA_VERSION: 12.1.1
  PYTHON_VERSION: 3.12

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64

    - name: Log in to Aliyun Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix={{branch}}-
          type=raw,value=cuda${{ env.CUDA_VERSION }}-py${{ env.PYTHON_VERSION }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Free disk space
      run: |
        sudo rm -rf /usr/local/lib/android /opt/ghc /usr/local/.ghcup
        sudo apt-get clean
        docker system prune -af
        df -h

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: vllm-base
        build-args: |
          CUDA_VERSION=${{ env.CUDA_VERSION }}
          PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          max_jobs=2
          nvcc_threads=2
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      if: ${{ github.event_name != 'pull_request' }}
      run: echo ${{ steps.build.outputs.digest }}
